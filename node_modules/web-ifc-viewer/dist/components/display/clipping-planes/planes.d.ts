import { Mesh, MeshBasicMaterial, Object3D, Plane, Vector3 } from 'three';
import { TransformControls } from 'three/examples/jsm/controls/TransformControls';
import { Context, IfcComponent } from '../../../base-types';
export declare class IfcPlane extends IfcComponent {
    static planeMaterial: MeshBasicMaterial;
    private static hiddenMaterial;
    readonly arrowBoundingBox: Mesh<import("three").BufferGeometry, import("three").Material | import("three").Material[]>;
    readonly plane: Plane;
    readonly planeMesh: Mesh;
    visible: boolean;
    active: boolean;
    readonly controls: TransformControls;
    readonly normal: Vector3;
    readonly origin: Vector3;
    readonly helper: Object3D;
    private readonly planeSize;
    private context;
    constructor(context: Context, origin: Vector3, normal: Vector3, onStartDragging: Function, onEndDragging: Function, planeSize: number);
    setVisibility(visible: boolean): void;
    removeFromScene: () => void;
    private newTransformControls;
    private initializeControls;
    private createArrowBoundingBox;
    private setupEvents;
    private createHelper;
    private getPlaneMesh;
}
