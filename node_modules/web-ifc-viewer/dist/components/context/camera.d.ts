import { PerspectiveCamera, Vector3, Mesh } from 'three';
import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';
import { PointerLockControls } from 'three/examples/jsm/controls/PointerLockControls';
import { IfcComponent, Context } from '../../base-types';
export declare class IfcCamera extends IfcComponent {
    camera: PerspectiveCamera;
    orbitControls: OrbitControls;
    fpsControls: PointerLockControls;
    private readonly context;
    private previousScale;
    constructor(context: Context);
    private moveForward;
    private moveBackward;
    private moveLeft;
    private moveRight;
    private moveUp;
    private moveDown;
    private prevTime;
    private velocity;
    private direction;
    onKeyDown: (event: KeyboardEvent) => void;
    onKeyUp: (event: KeyboardEvent) => void;
    get target(): Vector3;
    update(_delta: number): void;
    updateAspect(): void;
    toggleControls(active: boolean): void;
    targetItem(mesh: Mesh, useScaleFactor?: boolean, limit?: number): void;
    fitModelToFrame(): void;
    private setupCamera;
    private setupOrbitControls;
    private applyScaleToFocus;
    private getMeshScale;
}
