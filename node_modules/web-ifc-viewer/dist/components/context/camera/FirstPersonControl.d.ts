import { PointerLockControls } from 'three/examples/jsm/controls/PointerLockControls';
import { Camera } from 'three';
import { CameraProjections, Context, IfcComponent, NavigationMode, NavigationModes } from '../../../base-types';
import { IfcCamera } from './camera';
import { LiteEvent } from '../../../utils/LiteEvent';
export declare class FirstPersonControl extends IfcComponent implements NavigationMode {
    controls: PointerLockControls;
    enabled: boolean;
    readonly mode = NavigationModes.FirstPerson;
    readonly onChange: LiteEvent<unknown>;
    readonly onUnlock: LiteEvent<unknown>;
    readonly onChangeProjection: LiteEvent<Camera>;
    private prevTime;
    private velocity;
    private direction;
    private speed;
    private ifcCamera;
    private keyBinding;
    private controlsMap;
    private readonly dimensions;
    constructor(context: Context, camera: Camera, ifcCamera: IfcCamera);
    get projection(): CameraProjections;
    toggle(active: boolean): void;
    update(_delta: number): void;
    /**
     * @deprecated Use onChange.on() instead.
     */
    submitOnChange(action: (event: any) => void): void;
    /**
     * @deprecated Use onChange.on() instead.
     */
    submitOnUnlock(action: (event: any) => void): void;
    private enable;
    private disable;
    private onKeyDown;
    private onKeyUp;
    private move;
    private applySmoothDeceleration;
    private updateDirections;
    private updateDirection;
    private updateVelocity;
    private moveCamera;
    private getControl;
}
